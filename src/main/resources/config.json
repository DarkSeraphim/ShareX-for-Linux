{
# Here you can add multiple image uploaders
# They go in the format as shown below
# Btw I added a 'comment'
"apis":
[
# As JSON requires us to create a new 'object' each API
{
# A name is just a name for the GUI, all it should do
# is tell you where it will upload.
"name": "zack bb",

# What does the API serve?
"type": "image",

# The URL should point to the location where
# the API normally uploads. This is without any
# GET parameters
"url": "http://zackpollard.com/imageapi/",

# The method stands for the HTTP method,
# basically GET, POST, PUT, etc.
"method": "POST",

# The file is the POST index for the file
# In HTML, this is the 'name' attribute:
# <input type="file" name="This is the 'file' value"/>
"file": "",

# This allows you to filter out the URL from
# the response. Do note: it's using regular expressions :P
"response-filter":
[
# Each regular expression will be chained
# in the same order as shown here for
# effective use. If one doesn't match, it's ignored.
#
# Also makes them more readable and easier
# to fix in case of issues :3
{
"regex": "{\"key\":\"(.*?)\"}",
"replacement": "$1"
},
{
"regex": "{\"url\":\"(.*?)\"}",
"replacement": "$1"
}
],

# If your response is a simple key
# Currently only used for image
# %response% will be replaced with
# end result of the filtering
"response-format":
{
"image": "",
"thumbnail": "",
"delete": ""
}

# If you need some more headers
"optional-headers":
{
"opt": "value"
},

# If you need to supply extra parameters
"optional-parameters":
{
"key": "value"
}
}
]
}